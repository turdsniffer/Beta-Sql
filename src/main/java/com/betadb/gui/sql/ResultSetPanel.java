package com.betadb.gui.sql;

import static com.betadb.gui.jdbc.util.ResultSetUtils.getColumnClasses;
import static com.betadb.gui.jdbc.util.ResultSetUtils.getColumnNames;
import com.betadb.gui.sql.filter.ColumnFilterDialog;
import com.betadb.gui.sql.filter.RowFilterData;
import static com.betadb.gui.table.util.renderer.RendererUtils.formatColumns;
import com.google.inject.Inject;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author parmstrong
 */
public class ResultSetPanel extends javax.swing.JPanel
{
	private ResultsTableModel resultsTableModel;
	final TableRowSorter<TableModel> sorter;
	private ColumnFilterDialog columnFilterDialog;
	private int lastRightClickedColumn;
	
	
	/**
	 * Creates new form ResultSetPanel
	 */
	@Inject
	public ResultSetPanel(ResultsTableModel resultsTableModel, ResultTablePopup resultTablePopup)
	{
		initComponents();
		columnFilterDialog = new ColumnFilterDialog(tblResults);
		this.resultsTableModel = resultsTableModel;
		tblResults.setModel(resultsTableModel);
		tblResults.setTransferHandler(new ResultsTableTransferHandler());
		tblResults.setComponentPopupMenu(resultTablePopup);
		RowNumberColumnMouseListener rowNumberColumnMouseListener = new RowNumberColumnMouseListener();
		tblResults.addMouseListener(rowNumberColumnMouseListener);
		tblResults.addMouseMotionListener(rowNumberColumnMouseListener);

		sorter = new TableRowSorter<TableModel>(resultsTableModel);
		tblResults.setRowSorter(sorter);

		final JTableHeader tableHeader = tblResults.getTableHeader();
		tableHeader.addMouseListener(new MouseAdapter()
		{
			public void mouseClicked(MouseEvent me)
			{				
				if (SwingUtilities.isRightMouseButton(me))
				{
					lastRightClickedColumn = tblResults.columnAtPoint(me.getPoint());
					headerPopup.show(tableHeader, me.getX(), me.getY());
				}
			}
		});

		final ListSelectionModel selectionModel = tblResults.getColumnModel().getSelectionModel();

		tblResults.getColumnModel().getSelectionModel().addListSelectionListener(new ListSelectionListener()
		{
			@Override
			public void valueChanged(ListSelectionEvent event)
			{
				if (selectionModel.isSelectedIndex(tblResults.convertColumnIndexToView(0)))
					selectionModel.removeSelectionInterval(tblResults.convertColumnIndexToView(0), tblResults.convertColumnIndexToView(0));
			}
		});

	}

	public void setData(ResultSet rs) throws SQLException
	{
		List<String> columnNames = getColumnNames(rs);
		List<Class> columnClasses = getColumnClasses(rs);

		ArrayList<Object[]> data = getData(rs, columnNames);
		resultsTableModel.setData(columnNames, columnClasses, data);
		formatColumns(tblResults, new ResultsPanelTableCellRenderer());
		tblResults.getColumnModel().getColumn(0).setPreferredWidth(40);

		lblNumRows.setText(Integer.toString(data.size()));
	}

	private ArrayList<Object[]> getData(ResultSet rs, List<String> columnNames) throws SQLException
	{
		ArrayList<Object[]> data = new ArrayList<>();
		Object[] row;

		while (rs.next())
		{
			row = new Object[columnNames.size()];
			for (int i = 1; i <= row.length; i++)
				row[i - 1] = rs.getObject(i);

			data.add(row);
		}
		return data;
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        headerPopup = new javax.swing.JPopupMenu();
        btnFilter = new javax.swing.JMenuItem();
        btnRemoveFilters = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        btnFilterToolBar = new javax.swing.JButton();
        btnClearFiltersToolBar = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResults = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblNumRows = new javax.swing.JLabel();

        btnFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/betadb/gui/icons/filter.png"))); // NOI18N
        btnFilter.setText("Filter");
        btnFilter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFilterActionPerformed(evt);
            }
        });
        headerPopup.add(btnFilter);

        btnRemoveFilters.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/betadb/gui/icons/draw_eraser.png"))); // NOI18N
        btnRemoveFilters.setText("Clear Filters");
        btnRemoveFilters.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRemoveFiltersActionPerformed(evt);
            }
        });
        headerPopup.add(btnRemoveFilters);

        setAlignmentX(1.0F);
        setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setAlignmentX(0.0F);

        btnFilterToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/betadb/gui/icons/filter.png"))); // NOI18N
        btnFilterToolBar.setFocusable(false);
        btnFilterToolBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFilterToolBar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFilterToolBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFilterToolBarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFilterToolBar);

        btnClearFiltersToolBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/betadb/gui/icons/draw_eraser.png"))); // NOI18N
        btnClearFiltersToolBar.setFocusable(false);
        btnClearFiltersToolBar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClearFiltersToolBar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClearFiltersToolBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnClearFiltersToolBarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnClearFiltersToolBar);
        jToolBar1.add(filler1);

        jLabel2.setText("Export As:");
        jToolBar1.add(jLabel2);

        jButton1.setText("CSV");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        add(jToolBar1, java.awt.BorderLayout.NORTH);

        tblResults.setAutoCreateRowSorter(true);
        tblResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblResults.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblResults.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(tblResults);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Rows:");
        jPanel1.add(jLabel3);

        lblNumRows.setText("0");
        jPanel1.add(lblNumRows);

        add(jPanel1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFilterActionPerformed
    {//GEN-HEADEREND:event_btnFilterActionPerformed
		columnFilterDialog.initiate(new RowFilterData(lastRightClickedColumn, RowFilter.ComparisonType.EQUAL, ""));
    }//GEN-LAST:event_btnFilterActionPerformed

    private void btnRemoveFiltersActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRemoveFiltersActionPerformed
    {//GEN-HEADEREND:event_btnRemoveFiltersActionPerformed
        columnFilterDialog.clearFilters();
    }//GEN-LAST:event_btnRemoveFiltersActionPerformed

    private void btnClearFiltersToolBarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnClearFiltersToolBarActionPerformed
    {//GEN-HEADEREND:event_btnClearFiltersToolBarActionPerformed
        columnFilterDialog.clearFilters();
    }//GEN-LAST:event_btnClearFiltersToolBarActionPerformed

    private void btnFilterToolBarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFilterToolBarActionPerformed
    {//GEN-HEADEREND:event_btnFilterToolBarActionPerformed
        columnFilterDialog.initiate(null);
    }//GEN-LAST:event_btnFilterToolBarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearFiltersToolBar;
    private javax.swing.JMenuItem btnFilter;
    private javax.swing.JButton btnFilterToolBar;
    private javax.swing.JMenuItem btnRemoveFilters;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPopupMenu headerPopup;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblNumRows;
    private javax.swing.JTable tblResults;
    // End of variables declaration//GEN-END:variables
}
